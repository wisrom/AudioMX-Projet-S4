/*
 *
 * @file main.c
 * @brief Main routine
 *
 * @section License
 *
 * Copyright (C) 2010-2018 Oryx Embedded SARL. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * @author Oryx Embedded SARL (www.oryx-embedded.com)
 * @version 1.9.0
 **/

//Dependencies
#include <stdlib.h>
#include "xparameters.h"
#include <stdio.h>
#include "xil_io.h"
#include "common/os_port.h"
#include "cyclone_tcp/core/net.h"
#include "cyclone_tcp/net_config.h"
#include "cyclone_tcp/drivers/eth/enc624j600_driver.h"
#include "cyclone_tcp/core/udp.h"
#include "common/error.h"
#include "cyclone_tcp/std_services/echo.h"
#include "xgpio.h"
#include "xuartlite.h"
#include "xspi.h"
#include "myip_S4e_4reg.h"
#include "cyclone_tcp/spi_driver.h"
#include "cyclone_tcp/ext_int_driver.h"
#include <stdbool.h>


//Application configuration
#define APP_USE_DEFAULT_MAC_ADDR ENABLED
#define APP_MAC_ADDR "00-AB-CD-EF-07-95"

#define APP_USE_DHCP DISABLED
#define APP_IPV4_HOST_ADDR "192.168.13.2"
#define APP_IPV4_SUBNET_MASK "255.255.255.0"
#define APP_IPV4_DEFAULT_GATEWAY "192.168.13.1"
#define APP_IPV4_PRIMARY_DNS "8.8.8.8"
#define APP_IPV4_SECONDARY_DNS "8.8.4.4"

#define APP_USE_SLAAC DISABLED


#define INTC_DEVICE_ID			XPAR_MICROBLAZE_0_AXI_INTC_DEVICE_ID
#define MY_IP_BASE_ADDRESS     	XPAR_CALCUL_MOYENNE_MYIP_S4E_4REG_0_S00_AXI_BASEADDR
#define MYIP_REG_0  			MYIP_S4E_4REG_S00_AXI_SLV_REG0_OFFSET
#define MYIP_REG_1  			MYIP_S4E_4REG_S00_AXI_SLV_REG1_OFFSET
#define MYIP_REG_2  			MYIP_S4E_4REG_S00_AXI_SLV_REG2_OFFSET


//Global variables

u32 counter = 0;
XGpio outputLED;

/**************FFT configuration************/

#include <math.h>
#include <stdint.h>

#define PI 3.14159265358979323846
#define MAX_FFT_SIZE 1024

// Buffers principaux (signal et résultat FFT)
u32 FFTBuffer[MAX_FFT_SIZE];      // Résultat FFT (même format)


uint32_t SourceBuffer[MAX_FFT_SIZE] = {
    0U,    11U,    81U,    258U,    558U,    965U,    1422U,    1840U,
    2104U,    2092U,    1691U,    818U,    64978U,    63131U,    60921U,    58525U,
    56188U,    54201U,    52872U,    52497U,    53321U,    55506U,    59096U,    63999U,
    4437U,    11093U,    17919U,    24306U,    29602U,    32766U,    32766U,    32766U,
    28548U,    21159U,    11070U,    64351U,    50716U,    36690U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    33283U,    53337U,    10622U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    6460U,    35697U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    9365U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    31118U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    57366U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    34552U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    0U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    23707U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    0U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    0U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    0U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    0U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    0U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    42094U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,
    0U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    30417U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    32769U,    8000U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    32766U,    35166U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    32769U,    56433U,    32766U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    32766U,    32766U,    28847U,    59294U,    32769U,
    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,    32769U,
    32769U,    55359U,    11678U,    30844U,    32766U,    32766U,    32766U,    32766U,
    32766U,    32766U,    32766U,    27314U,    14011U,    1118U,    55105U,    45636U,
    38739U,    34649U,    33353U,    34611U,    38006U,    42994U,    48967U,    55311U,
    61461U,    1406U,    5868U,    9099U,    11025U,    11704U,    11297U,    10042U,
    8216U,    6108U,    3980U,    2049U,    469U,    64860U,    64167U,    63883U,
    63925U,    64184U,    64548U,    64919U,    65222U,    65421U,    65516U,    0U,
};

int32_t windowTable[MAX_FFT_SIZE] = {
    0,    20252,    81009,    182267,    324023,    506272,    729007,    992219,
    1295898,    1640034,    2024612,    2449619,    2915038,    3420852,    3967042,    4553587,
    5180465,    5847653,    6555125,    7302854,    8090813,    8918971,    9787298,    10695761,
    11644325,    12632954,    13661612,    14730259,    15838855,    16987359,    18175727,    19403914,
    20671873,    21979558,    23326919,    24713904,    26140462,    27606539,    29112079,    30657026,
    32241321,    33864905,    35527716,    37229692,    38970768,    40750879,    42569958,    44427935,
    46324742,    48260305,    50234553,    52247411,    54298803,    56388652,    58516878,    60683401,
    62888140,    65131012,    67411931,    69730813,    72087569,    74482110,    76914346,    79384186,
    81891536,    84436302,    87018387,    89637695,    92294126,    94987580,    97717956,    100485150,
    103289059,    106129576,    109006595,    111920006,    114869700,    117855566,    120877491,    123935360,
    127029060,    130158472,    133323479,    136523962,    139759799,    143030869,    146337048,    149678212,
    153054235,    156464988,    159910344,    163390173,    166904343,    170452721,    174035175,    177651568,
    181301764,    184985626,    188703015,    192453789,    196237809,    200054931,    203905012,    207787905,
    211703464,    215651542,    219631990,    223644658,    227689394,    231766046,    235874460,    240014480,
    244185951,    248388716,    252622616,    256887490,    261183179,    265509521,    269866351,    274253506,
    278670820,    283118126,    287595258,    292102045,    296638318,    301203905,    305798636,    310422335,
    315074829,    319755943,    324465499,    329203320,    333969227,    338763041,    343584581,    348433664,
    353310109,    358213730,    363144343,    368101762,    373085799,    378096268,    383132979,    388195741,
    393284365,    398398657,    403538426,    408703476,    413893614,    419108643,    424348368,    429612589,
    434901109,    440213727,    445550245,    450910460,    456294170,    461701171,    467131261,    472584235,
    478059885,    483558007,    489078392,    494620833,    500185119,    505771042,    511378391,    517006954,
    522656518,    528326872,    534017799,    539729087,    545460520,    551211881,    556982953,    562773519,
    568583360,    574412258,    580259992,    586126341,    592011085,    597914001,    603834867,    609773459,
    615729553,    621702926,    627693350,    633700601,    639724451,    645764674,    651821041,    657893325,
    663981296,    670084724,    676203379,    682337031,    688485448,    694648398,    700825648,    707016966,
    713222118,    719440870,    725672987,    731918234,    738176376,    744447177,    750730399,    757025807,
    763333162,    769652226,    775982762,    782324530,    788677292,    795040807,    801414835,    807799136,
    814193470,    820597594,    827011268,    833434249,    839866296,    846307165,    852756613,    859214398,
    865680275,    872154001,    878635332,    885124022,    891619828,    898122504,    904631805,    911147486,
    917669299,    924197001,    930730343,    937269081,    943812967,    950361754,    956915195,    963473043,
    970035051,    976600971,    983170556,    989743557,    996319727,    1002898818,    1009480581,    1016064768,
    1022651130,    1029239421,    1035829389,    1042420788,    1049013369,    1055606882,    1062201080,    1068795713,
    1075390532,    1081985289,    1088579736,    1095173622,    1101766700,    1108358721,    1114949436,    1121538597,
    1128125954,    1134711260,    1141294266,    1147874724,    1154452385,    1161027002,    1167598326,    1174166109,
    1180730104,    1187290063,    1193845739,    1200396884,    1206943251,    1213484594,    1220020665,    1226551217,
    1233076006,    1239594784,    1246107305,    1252613324,    1259112596,    1265604875,    1272089916,    1278567475,
    1285037307,    1291499168,    1297952815,    1304398004,    1310834492,    1317262037,    1323680394,    1330089324,
    1336488583,    1342877931,    1349257125,    1355625927,    1361984095,    1368331390,    1374667572,    1380992402,
    1387305641,    1393607052,    1399896397,    1406173438,    1412437939,    1418689663,    1424928375,    1431153839,
    1437365820,    1443564084,    1449748397,    1455918526,    1462074239,    1468215302,    1474341484,    1480452555,
    1486548283,    1492628439,    1498692793,    1504741117,    1510773182,    1516788761,    1522787627,    1528769553,
    1534734315,    1540681686,    1546611443,    1552523362,    1558417219,    1564292794,    1570149863,    1575988206,
    1581807603,    1587607834,    1593388680,    1599149924,    1604891348,    1610612735,    1616313870,    1621994537,
    1627654523,    1633293613,    1638911595,    1644508257,    1650083389,    1655636778,    1661168217,    1666677497,
    1672164409,    1677628747,    1683070304,    1688488875,    1693884257,    1699256244,    1704604636,    1709929229,
    1715229823,    1720506219,    1725758216,    1730985617,    1736188226,    1741365844,    1746518278,    1751645333,
    1756746814,    1761822531,    1766872292,    1771895905,    1776893182,    1781863934,    1786807973,    1791725114,
    1796615169,    1801477956,    1806313290,    1811120990,    1815900873,    1820652759,    1825376470,    1830071827,
    1834738653,    1839376772,    1843986008,    1848566189,    1853117141,    1857638692,    1862130673,    1866592913,
    1871025244,    1875427499,    1879799512,    1884141118,    1888452154,    1892732456,    1896981863,    1901200215,
    1905387353,    1909543118,    1913667355,    1917759907,    1921820620,    1925849341,    1929845917,    1933810199,
    1937742037,    1941641281,    1945507786,    1949341405,    1953141994,    1956909409,    1960643509,    1964344152,
    1968011198,    1971644510,    1975243950,    1978809383,    1982340674,    1985837689,    1989300298,    1992728369,
    1996121773,    1999480382,    2002804069,    2006092709,    2009346178,    2012564353,    2015747113,    2018894338,
    2022005908,    2025081707,    2028121619,    2031125528,    2034093322,    2037024889,    2039920117,    2042778899,
    2045601125,    2048386690,    2051135488,    2053847416,    2056522371,    2059160253,    2061760961,    2064324399,
    2066850469,    2069339076,    2071790125,    2074203525,    2076579185,    2078917015,    2081216926,    2083478832,
    2085702648,    2087888290,    2090035675,    2092144722,    2094215352,    2096247486,    2098241049,    2100195964,
    2102112158,    2103989559,    2105828095,    2107627699,    2109388300,    2111109835,    2112792236,    2114435441,
    2116039388,    2117604017,    2119129267,    2120615083,    2122061407,    2123468185,    2124835365,    2126162894,
    2127450722,    2128698801,    2129907084,    2131075526,    2132204081,    2133292708,    2134341365,    2135350014,
    2136318615,    2137247132,    2138135531,    2138983778,    2139791840,    2140559688,    2141287292,    2141974625,
    2142621661,    2143228375,    2143794746,    2144320750,    2144806369,    2145251584,    2145656379,    2146020737,
    2146344646,    2146628093,    2146871068,    2147073560,    2147235564,    2147357071,    2147438079,    2147478584,
    2147478584,    2147438079,    2147357071,    2147235564,    2147073560,    2146871068,    2146628093,    2146344646,
    2146020737,    2145656379,    2145251584,    2144806369,    2144320750,    2143794746,    2143228375,    2142621661,
    2141974625,    2141287292,    2140559688,    2139791840,    2138983778,    2138135531,    2137247132,    2136318615,
    2135350014,    2134341365,    2133292708,    2132204081,    2131075526,    2129907084,    2128698801,    2127450722,
    2126162894,    2124835365,    2123468185,    2122061407,    2120615083,    2119129267,    2117604017,    2116039388,
    2114435441,    2112792236,    2111109835,    2109388300,    2107627699,    2105828095,    2103989559,    2102112158,
    2100195964,    2098241049,    2096247486,    2094215352,    2092144722,    2090035675,    2087888290,    2085702648,
    2083478832,    2081216926,    2078917015,    2076579185,    2074203525,    2071790125,    2069339076,    2066850469,
    2064324399,    2061760961,    2059160253,    2056522371,    2053847416,    2051135488,    2048386690,    2045601125,
    2042778899,    2039920117,    2037024889,    2034093322,    2031125528,    2028121619,    2025081707,    2022005908,
    2018894338,    2015747113,    2012564353,    2009346178,    2006092709,    2002804069,    1999480382,    1996121773,
    1992728369,    1989300298,    1985837689,    1982340674,    1978809383,    1975243950,    1971644510,    1968011198,
    1964344152,    1960643509,    1956909409,    1953141994,    1949341405,    1945507786,    1941641281,    1937742037,
    1933810199,    1929845917,    1925849341,    1921820620,    1917759907,    1913667355,    1909543118,    1905387353,
    1901200215,    1896981863,    1892732456,    1888452154,    1884141118,    1879799512,    1875427499,    1871025244,
    1866592913,    1862130673,    1857638692,    1853117141,    1848566189,    1843986008,    1839376772,    1834738653,
    1830071827,    1825376470,    1820652759,    1815900873,    1811120990,    1806313290,    1801477956,    1796615169,
    1791725114,    1786807973,    1781863934,    1776893182,    1771895905,    1766872292,    1761822531,    1756746814,
    1751645333,    1746518278,    1741365844,    1736188226,    1730985617,    1725758216,    1720506219,    1715229823,
    1709929229,    1704604636,    1699256244,    1693884257,    1688488875,    1683070304,    1677628747,    1672164409,
    1666677497,    1661168217,    1655636778,    1650083389,    1644508257,    1638911595,    1633293613,    1627654523,
    1621994537,    1616313870,    1610612735,    1604891348,    1599149924,    1593388680,    1587607834,    1581807603,
    1575988206,    1570149863,    1564292794,    1558417219,    1552523362,    1546611443,    1540681686,    1534734315,
    1528769553,    1522787627,    1516788761,    1510773182,    1504741117,    1498692793,    1492628439,    1486548283,
    1480452555,    1474341484,    1468215302,    1462074239,    1455918526,    1449748397,    1443564084,    1437365820,
    1431153839,    1424928375,    1418689663,    1412437939,    1406173438,    1399896397,    1393607052,    1387305641,
    1380992402,    1374667572,    1368331390,    1361984095,    1355625927,    1349257125,    1342877931,    1336488583,
    1330089324,    1323680394,    1317262037,    1310834492,    1304398004,    1297952815,    1291499168,    1285037307,
    1278567475,    1272089916,    1265604875,    1259112596,    1252613324,    1246107305,    1239594784,    1233076006,
    1226551217,    1220020665,    1213484594,    1206943251,    1200396884,    1193845739,    1187290063,    1180730104,
    1174166109,    1167598326,    1161027002,    1154452385,    1147874724,    1141294266,    1134711260,    1128125954,
    1121538597,    1114949436,    1108358721,    1101766700,    1095173622,    1088579736,    1081985289,    1075390532,
    1068795713,    1062201080,    1055606882,    1049013369,    1042420788,    1035829389,    1029239421,    1022651130,
    1016064768,    1009480581,    1002898818,    996319727,    989743557,    983170556,    976600971,    970035051,
    963473043,    956915195,    950361754,    943812967,    937269081,    930730343,    924197001,    917669299,
    911147486,    904631805,    898122504,    891619828,    885124022,    878635332,    872154001,    865680275,
    859214398,    852756613,    846307165,    839866296,    833434249,    827011268,    820597594,    814193470,
    807799136,    801414835,    795040807,    788677292,    782324530,    775982762,    769652226,    763333162,
    757025807,    750730399,    744447177,    738176376,    731918234,    725672987,    719440870,    713222118,
    707016966,    700825648,    694648398,    688485448,    682337031,    676203379,    670084724,    663981296,
    657893325,    651821041,    645764674,    639724451,    633700601,    627693350,    621702926,    615729553,
    609773459,    603834867,    597914001,    592011085,    586126341,    580259992,    574412258,    568583360,
    562773519,    556982953,    551211881,    545460520,    539729087,    534017799,    528326872,    522656518,
    517006954,    511378391,    505771042,    500185119,    494620833,    489078392,    483558007,    478059885,
    472584235,    467131261,    461701171,    456294170,    450910460,    445550245,    440213727,    434901109,
    429612589,    424348368,    419108643,    413893614,    408703476,    403538426,    398398657,    393284365,
    388195741,    383132979,    378096268,    373085799,    368101762,    363144343,    358213730,    353310109,
    348433664,    343584581,    338763041,    333969227,    329203320,    324465499,    319755943,    315074829,
    310422335,    305798636,    301203905,    296638318,    292102045,    287595258,    283118126,    278670820,
    274253506,    269866351,    265509521,    261183179,    256887490,    252622616,    248388716,    244185951,
    240014480,    235874460,    231766046,    227689394,    223644658,    219631990,    215651542,    211703464,
    207787905,    203905012,    200054931,    196237809,    192453789,    188703015,    184985626,    181301764,
    177651568,    174035175,    170452721,    166904343,    163390173,    159910344,    156464988,    153054235,
    149678212,    146337048,    143030869,    139759799,    136523962,    133323479,    130158472,    127029060,
    123935360,    120877491,    117855566,    114869700,    111920006,    109006595,    106129576,    103289059,
    100485150,    97717956,    94987580,    92294126,    89637695,    87018387,    84436302,    81891536,
    79384186,    76914346,    74482110,    72087569,    69730813,    67411931,    65131012,    62888140,
    60683401,    58516878,    56388652,    54298803,    52247411,    50234553,    48260305,    46324742,
    44427935,    42569958,    40750879,    38970768,    37229692,    35527716,    33864905,    32241321,
    30657026,    29112079,    27606539,    26140462,    24713904,    23326919,    21979558,    20671873,
    19403914,    18175727,    16987359,    15838855,    14730259,    13661612,    12632954,    11644325,
    10695761,    9787298,    8918971,    8090813,    7302854,    6555125,    5847653,    5180465,
    4553587,    3967042,    3420852,    2915038,    2449619,    2024612,    1640034,    1295898,
    992219,    729007,    506272,    324023,    182267,    81009,    20252,    0,
};

int32_t twiddleReal[MAX_FFT_SIZE/2] = {
    2147483646,    2147443221,    2147321945,    2147119824,    2146836865,    2146473079,    2146028479,    2145503082,
    2144896909,    2144209981,    2143442325,    2142593970,    2141664947,    2140655292,    2139565042,    2138394239,
    2137142926,    2135811152,    2134398965,    2132906419,    2131333571,    2129680479,    2127947205,    2126133816,
    2124240379,    2122266966,    2120213650,    2118080510,    2115867625,    2113575079,    2111202958,    2108751351,
    2106220351,    2103610053,    2100920555,    2098151959,    2095304369,    2092377891,    2089372637,    2086288719,
    2083126253,    2079885359,    2076566159,    2073168776,    2069693341,    2066139982,    2062508835,    2058800035,
    2055013722,    2051150040,    2047209132,    2043191149,    2039096240,    2034924561,    2030676268,    2026351521,
    2021950483,    2017473320,    2012920200,    2008291295,    2003586778,    1998806828,    1993951624,    1989021349,
    1984016188,    1978936330,    1973781966,    1968553291,    1963250500,    1957873795,    1952423376,    1946899450,
    1941302224,    1935631909,    1929888719,    1924072870,    1918184580,    1912224072,    1906191569,    1900087300,
    1893911493,    1887664382,    1881346201,    1874957188,    1868497585,    1861967633,    1855367580,    1848697673,
    1841958164,    1835149305,    1828271355,    1821324571,    1814309215,    1807225552,    1800073848,    1792854372,
    1785567395,    1778213194,    1770792043,    1763304223,    1755750016,    1748129706,    1740443580,    1732691927,
    1724875039,    1716993211,    1709046738,    1701035921,    1692961061,    1684822463,    1676620431,    1668355276,
    1660027308,    1651636840,    1643184190,    1634669675,    1626093615,    1617456334,    1608758157,    1599999410,
    1591180425,    1582301533,    1573363067,    1564365366,    1555308767,    1546193612,    1537020243,    1527789006,
    1518500249,    1509154322,    1499751575,    1490292364,    1480777044,    1471205973,    1461579513,    1451898025,
    1442161874,    1432371426,    1422527050,    1412629117,    1402677999,    1392674071,    1382617710,    1372509294,
    1362349204,    1352137822,    1341875532,    1331562722,    1321199780,    1310787095,    1300325059,    1289814068,
    1279254515,    1268646799,    1257991319,    1247288477,    1236538675,    1225742318,    1214899812,    1204011566,
    1193077990,    1182099495,    1171076495,    1160009404,    1148898640,    1137744620,    1126547765,    1115308496,
    1104027236,    1092704410,    1081340445,    1069935767,    1058490807,    1047005996,    1035481765,    1023918549,
    1012316784,    1000676905,    988999351,    977284561,    965532978,    953745043,    941921200,    930061894,
    918167571,    906238681,    894275670,    882278991,    870249095,    858186434,    846091463,    833964637,
    821806413,    809617248,    797397602,    785147934,    772868706,    760560379,    748223418,    735858287,
    723465451,    711045377,    698598533,    686125386,    673626408,    661102068,    648552837,    635979190,
    623381597,    610760535,    598116478,    585449903,    572761285,    560051103,    547319836,    534567963,
    521795963,    509004318,    496193509,    483364019,    470516330,    457650927,    444768293,    431868915,
    418953276,    406021864,    393075166,    380113669,    367137860,    354148229,    341145265,    328129457,
    315101294,    302061269,    289009871,    275947592,    262874923,    249792358,    236700388,    223599506,
    210490206,    197372981,    184248325,    171116732,    157978697,    144834714,    131685278,    118530885,
    105372028,    92209205,    79042909,    65873638,    52701887,    39528151,    26352928,    13176712,
    0,    -13176712,    -26352928,    -39528151,    -52701887,    -65873638,    -79042909,    -92209205,
    -105372028,    -118530885,    -131685278,    -144834714,    -157978697,    -171116732,    -184248325,    -197372981,
    -210490206,    -223599506,    -236700388,    -249792358,    -262874923,    -275947592,    -289009871,    -302061269,
    -315101294,    -328129457,    -341145265,    -354148229,    -367137860,    -380113669,    -393075166,    -406021864,
    -418953276,    -431868915,    -444768293,    -457650927,    -470516330,    -483364019,    -496193509,    -509004318,
    -521795963,    -534567963,    -547319836,    -560051103,    -572761285,    -585449903,    -598116478,    -610760535,
    -623381597,    -635979190,    -648552837,    -661102068,    -673626408,    -686125386,    -698598533,    -711045377,
    -723465451,    -735858287,    -748223418,    -760560379,    -772868706,    -785147934,    -797397602,    -809617248,
    -821806413,    -833964637,    -846091463,    -858186434,    -870249095,    -882278991,    -894275670,    -906238681,
    -918167571,    -930061894,    -941921200,    -953745043,    -965532978,    -977284561,    -988999351,    -1000676905,
    -1012316784,    -1023918549,    -1035481765,    -1047005996,    -1058490807,    -1069935767,    -1081340445,    -1092704410,
    -1104027236,    -1115308496,    -1126547765,    -1137744620,    -1148898640,    -1160009404,    -1171076495,    -1182099495,
    -1193077990,    -1204011566,    -1214899812,    -1225742318,    -1236538675,    -1247288477,    -1257991319,    -1268646799,
    -1279254515,    -1289814068,    -1300325059,    -1310787095,    -1321199780,    -1331562722,    -1341875532,    -1352137822,
    -1362349204,    -1372509294,    -1382617710,    -1392674071,    -1402677999,    -1412629117,    -1422527050,    -1432371426,
    -1442161874,    -1451898025,    -1461579513,    -1471205973,    -1480777044,    -1490292364,    -1499751575,    -1509154322,
    -1518500249,    -1527789006,    -1537020243,    -1546193612,    -1555308767,    -1564365366,    -1573363067,    -1582301533,
    -1591180425,    -1599999410,    -1608758157,    -1617456334,    -1626093615,    -1634669675,    -1643184190,    -1651636840,
    -1660027308,    -1668355276,    -1676620431,    -1684822463,    -1692961061,    -1701035921,    -1709046738,    -1716993211,
    -1724875039,    -1732691927,    -1740443580,    -1748129706,    -1755750016,    -1763304223,    -1770792043,    -1778213194,
    -1785567395,    -1792854372,    -1800073848,    -1807225552,    -1814309215,    -1821324571,    -1828271355,    -1835149305,
    -1841958164,    -1848697673,    -1855367580,    -1861967633,    -1868497585,    -1874957188,    -1881346201,    -1887664382,
    -1893911493,    -1900087300,    -1906191569,    -1912224072,    -1918184580,    -1924072870,    -1929888719,    -1935631909,
    -1941302224,    -1946899450,    -1952423376,    -1957873795,    -1963250500,    -1968553291,    -1973781966,    -1978936330,
    -1984016188,    -1989021349,    -1993951624,    -1998806828,    -2003586778,    -2008291295,    -2012920200,    -2017473320,
    -2021950483,    -2026351521,    -2030676268,    -2034924561,    -2039096240,    -2043191149,    -2047209132,    -2051150040,
    -2055013722,    -2058800035,    -2062508835,    -2066139982,    -2069693341,    -2073168776,    -2076566159,    -2079885359,
    -2083126253,    -2086288719,    -2089372637,    -2092377891,    -2095304369,    -2098151959,    -2100920555,    -2103610053,
    -2106220351,    -2108751351,    -2111202958,    -2113575079,    -2115867625,    -2118080510,    -2120213650,    -2122266966,
    -2124240379,    -2126133816,    -2127947205,    -2129680479,    -2131333571,    -2132906419,    -2134398965,    -2135811152,
    -2137142926,    -2138394239,    -2139565042,    -2140655292,    -2141664947,    -2142593970,    -2143442325,    -2144209981,
    -2144896909,    -2145503082,    -2146028479,    -2146473079,    -2146836865,    -2147119824,    -2147321945,    -2147443221,
};

int32_t twiddleImag[MAX_FFT_SIZE/2] = {
    0,    -13176712,    -26352928,    -39528151,    -52701887,    -65873638,    -79042909,    -92209205,
    -105372028,    -118530885,    -131685278,    -144834714,    -157978697,    -171116732,    -184248325,    -197372981,
    -210490206,    -223599506,    -236700388,    -249792358,    -262874923,    -275947592,    -289009871,    -302061269,
    -315101294,    -328129457,    -341145265,    -354148229,    -367137860,    -380113669,    -393075166,    -406021864,
    -418953276,    -431868915,    -444768293,    -457650927,    -470516330,    -483364019,    -496193509,    -509004318,
    -521795963,    -534567963,    -547319836,    -560051103,    -572761285,    -585449903,    -598116478,    -610760535,
    -623381597,    -635979190,    -648552837,    -661102068,    -673626408,    -686125386,    -698598533,    -711045377,
    -723465451,    -735858287,    -748223418,    -760560379,    -772868706,    -785147934,    -797397602,    -809617248,
    -821806413,    -833964637,    -846091463,    -858186434,    -870249095,    -882278991,    -894275670,    -906238681,
    -918167571,    -930061894,    -941921200,    -953745043,    -965532978,    -977284561,    -988999351,    -1000676905,
    -1012316784,    -1023918549,    -1035481765,    -1047005996,    -1058490807,    -1069935767,    -1081340445,    -1092704410,
    -1104027236,    -1115308496,    -1126547765,    -1137744620,    -1148898640,    -1160009404,    -1171076495,    -1182099495,
    -1193077990,    -1204011566,    -1214899812,    -1225742318,    -1236538675,    -1247288477,    -1257991319,    -1268646799,
    -1279254515,    -1289814068,    -1300325059,    -1310787095,    -1321199780,    -1331562722,    -1341875532,    -1352137822,
    -1362349204,    -1372509294,    -1382617710,    -1392674071,    -1402677999,    -1412629117,    -1422527050,    -1432371426,
    -1442161874,    -1451898025,    -1461579513,    -1471205973,    -1480777044,    -1490292364,    -1499751575,    -1509154322,
    -1518500249,    -1527789006,    -1537020243,    -1546193612,    -1555308767,    -1564365366,    -1573363067,    -1582301533,
    -1591180425,    -1599999410,    -1608758157,    -1617456334,    -1626093615,    -1634669675,    -1643184190,    -1651636840,
    -1660027308,    -1668355276,    -1676620431,    -1684822463,    -1692961061,    -1701035921,    -1709046738,    -1716993211,
    -1724875039,    -1732691927,    -1740443580,    -1748129706,    -1755750016,    -1763304223,    -1770792043,    -1778213194,
    -1785567395,    -1792854372,    -1800073848,    -1807225552,    -1814309215,    -1821324571,    -1828271355,    -1835149305,
    -1841958164,    -1848697673,    -1855367580,    -1861967633,    -1868497585,    -1874957188,    -1881346201,    -1887664382,
    -1893911493,    -1900087300,    -1906191569,    -1912224072,    -1918184580,    -1924072870,    -1929888719,    -1935631909,
    -1941302224,    -1946899450,    -1952423376,    -1957873795,    -1963250500,    -1968553291,    -1973781966,    -1978936330,
    -1984016188,    -1989021349,    -1993951624,    -1998806828,    -2003586778,    -2008291295,    -2012920200,    -2017473320,
    -2021950483,    -2026351521,    -2030676268,    -2034924561,    -2039096240,    -2043191149,    -2047209132,    -2051150040,
    -2055013722,    -2058800035,    -2062508835,    -2066139982,    -2069693341,    -2073168776,    -2076566159,    -2079885359,
    -2083126253,    -2086288719,    -2089372637,    -2092377891,    -2095304369,    -2098151959,    -2100920555,    -2103610053,
    -2106220351,    -2108751351,    -2111202958,    -2113575079,    -2115867625,    -2118080510,    -2120213650,    -2122266966,
    -2124240379,    -2126133816,    -2127947205,    -2129680479,    -2131333571,    -2132906419,    -2134398965,    -2135811152,
    -2137142926,    -2138394239,    -2139565042,    -2140655292,    -2141664947,    -2142593970,    -2143442325,    -2144209981,
    -2144896909,    -2145503082,    -2146028479,    -2146473079,    -2146836865,    -2147119824,    -2147321945,    -2147443221,
    -2147483647,    -2147443221,    -2147321945,    -2147119824,    -2146836865,    -2146473079,    -2146028479,    -2145503082,
    -2144896909,    -2144209981,    -2143442325,    -2142593970,    -2141664947,    -2140655292,    -2139565042,    -2138394239,
    -2137142926,    -2135811152,    -2134398965,    -2132906419,    -2131333571,    -2129680479,    -2127947205,    -2126133816,
    -2124240379,    -2122266966,    -2120213650,    -2118080510,    -2115867625,    -2113575079,    -2111202958,    -2108751351,
    -2106220351,    -2103610053,    -2100920555,    -2098151959,    -2095304369,    -2092377891,    -2089372637,    -2086288719,
    -2083126253,    -2079885359,    -2076566159,    -2073168776,    -2069693341,    -2066139982,    -2062508835,    -2058800035,
    -2055013722,    -2051150040,    -2047209132,    -2043191149,    -2039096240,    -2034924561,    -2030676268,    -2026351521,
    -2021950483,    -2017473320,    -2012920200,    -2008291295,    -2003586778,    -1998806828,    -1993951624,    -1989021349,
    -1984016188,    -1978936330,    -1973781966,    -1968553291,    -1963250500,    -1957873795,    -1952423376,    -1946899450,
    -1941302224,    -1935631909,    -1929888719,    -1924072870,    -1918184580,    -1912224072,    -1906191569,    -1900087300,
    -1893911493,    -1887664382,    -1881346201,    -1874957188,    -1868497585,    -1861967633,    -1855367580,    -1848697673,
    -1841958164,    -1835149305,    -1828271355,    -1821324571,    -1814309215,    -1807225552,    -1800073848,    -1792854372,
    -1785567395,    -1778213194,    -1770792043,    -1763304223,    -1755750016,    -1748129706,    -1740443580,    -1732691927,
    -1724875039,    -1716993211,    -1709046738,    -1701035921,    -1692961061,    -1684822463,    -1676620431,    -1668355276,
    -1660027308,    -1651636840,    -1643184190,    -1634669675,    -1626093615,    -1617456334,    -1608758157,    -1599999410,
    -1591180425,    -1582301533,    -1573363067,    -1564365366,    -1555308767,    -1546193612,    -1537020243,    -1527789006,
    -1518500249,    -1509154322,    -1499751575,    -1490292364,    -1480777044,    -1471205973,    -1461579513,    -1451898025,
    -1442161874,    -1432371426,    -1422527050,    -1412629117,    -1402677999,    -1392674071,    -1382617710,    -1372509294,
    -1362349204,    -1352137822,    -1341875532,    -1331562722,    -1321199780,    -1310787095,    -1300325059,    -1289814068,
    -1279254515,    -1268646799,    -1257991319,    -1247288477,    -1236538675,    -1225742318,    -1214899812,    -1204011566,
    -1193077990,    -1182099495,    -1171076495,    -1160009404,    -1148898640,    -1137744620,    -1126547765,    -1115308496,
    -1104027236,    -1092704410,    -1081340445,    -1069935767,    -1058490807,    -1047005996,    -1035481765,    -1023918549,
    -1012316784,    -1000676905,    -988999351,    -977284561,    -965532978,    -953745043,    -941921200,    -930061894,
    -918167571,    -906238681,    -894275670,    -882278991,    -870249095,    -858186434,    -846091463,    -833964637,
    -821806413,    -809617248,    -797397602,    -785147934,    -772868706,    -760560379,    -748223418,    -735858287,
    -723465451,    -711045377,    -698598533,    -686125386,    -673626408,    -661102068,    -648552837,    -635979190,
    -623381597,    -610760535,    -598116478,    -585449903,    -572761285,    -560051103,    -547319836,    -534567963,
    -521795963,    -509004318,    -496193509,    -483364019,    -470516330,    -457650927,    -444768293,    -431868915,
    -418953276,    -406021864,    -393075166,    -380113669,    -367137860,    -354148229,    -341145265,    -328129457,
    -315101294,    -302061269,    -289009871,    -275947592,    -262874923,    -249792358,    -236700388,    -223599506,
    -210490206,    -197372981,    -184248325,    -171116732,    -157978697,    -144834714,    -131685278,    -118530885,
    -105372028,    -92209205,    -79042909,    -65873638,    -52701887,    -39528151,    -26352928,    -13176712,
};

/**************FFT configuration************/



unsigned int ReceivedCount = 0;

/**
 * @brief System initialization
 **/

Ipv4Addr ipv4Addr;

void systemInit(void)
{
   error_t error;
   MacAddr macAddr;

   //Initialize kernel
   osInitKernel();

   //TCP/IP stack initialization
   error = netInit();

   //Configure the first Ethernet interface

   //Set interface name
   netSetInterfaceName(&netInterface[0], "eth0");
   //Set host name
   netSetHostname(&netInterface[0], "UDPEcho");
   //Select the relevant network adapter
   netSetDriver(&netInterface[0], &enc624j600Driver);
   //netSetPhyDriver(interface, &lan8720PhyDriver);

   netSetSpiDriver(&netInterface[0], &spiDriver);
   netSetExtIntDriver(&netInterface[0], &extIntDriver);

#if (APP_USE_DEFAULT_MAC_ADDR == ENABLED)
   //Use the factory preprogrammed MAC address
   macStringToAddr("00-00-00-00-00-00", &macAddr);
   netSetMacAddr(&netInterface[0], &macAddr);
#endif

   //Initialize network interface
   error = netConfigInterface(&netInterface[0]);
   //Any error to report?

#if (IPV4_SUPPORT == ENABLED)

   //Set IPv4 host address
   ipv4StringToAddr(APP_IPV4_HOST_ADDR, &ipv4Addr);
   ipv4SetHostAddr(&netInterface[0], ipv4Addr);

   //Set subnet mask
   ipv4StringToAddr(APP_IPV4_SUBNET_MASK, &ipv4Addr);
   ipv4SetSubnetMask(&netInterface[0], ipv4Addr);

   //Set default gateway
   ipv4StringToAddr(APP_IPV4_DEFAULT_GATEWAY, &ipv4Addr);
   ipv4SetDefaultGateway(&netInterface[0], ipv4Addr);

   //Set primary and secondary DNS servers
   ipv4StringToAddr(APP_IPV4_PRIMARY_DNS, &ipv4Addr);
   ipv4SetDnsServer(&netInterface[0], 0, ipv4Addr);
   ipv4StringToAddr(APP_IPV4_SECONDARY_DNS, &ipv4Addr);
   ipv4SetDnsServer(&netInterface[0], 1, ipv4Addr);
#endif

   //init_platform();
}


void MyIP_InterruptHandler(void *CallbackRef)
{
	XIntc_Acknowledge(&InterruptController, XPAR_MICROBLAZE_0_AXI_INTC_CALCUL_MOYENNE_DSP_DELAI_2CYCLE_Q_INTR);

	u32 valeur;
	u32 moyenne;
	u32 somme;

	// lire la nouvelle valeur insérée dans le registre 0 de myIP
	valeur =  MYIP_S4E_4REG_mReadReg(MY_IP_BASE_ADDRESS, MYIP_REG_0);
	xil_printf("Nouvelle valeur = %d\t",  valeur);

	// lire la somme courante dans le registre 2 de myIP
	somme =  MYIP_S4E_4REG_mReadReg(MY_IP_BASE_ADDRESS, MYIP_REG_2);
	xil_printf("Somme = %d\t",  somme);

	// lire la moyenne courante dans le registre 1 de myIP
	moyenne =  MYIP_S4E_4REG_mReadReg(MY_IP_BASE_ADDRESS, MYIP_REG_1);
	xil_printf("Moyenne = %d\n\r", moyenne);

}

int SetupInterruptSystem()
{

	int Status;

	Status = XIntc_Initialize(&InterruptController, INTC_DEVICE_ID);

	/*
	 * Connect a device driver handler that will be called when an interrupt
	 * for the device occurs, the device driver handler performs the
	 * specific interrupt processing for the device.
	 */
	Status = XIntc_Connect(&InterruptController, XPAR_MICROBLAZE_0_AXI_INTC_CALCUL_MOYENNE_DSP_DELAI_2CYCLE_Q_INTR,
			   (XInterruptHandler)MyIP_InterruptHandler,
			   (void *)0);

	Status = XIntc_Connect(&InterruptController, XPAR_MICROBLAZE_0_AXI_INTC_SYSTEM_INT_NIC100_INTR,
			   (XInterruptHandler)ENC_Int_Handler,
			   (void *)0);


	Status = XIntc_Start(&InterruptController, XIN_REAL_MODE);

	XIntc_Enable(&InterruptController, XPAR_MICROBLAZE_0_AXI_INTC_CALCUL_MOYENNE_DSP_DELAI_2CYCLE_Q_INTR);

	Xil_ExceptionInit();

	Xil_ExceptionRegisterHandler(XIL_EXCEPTION_ID_INT,
				(Xil_ExceptionHandler)XIntc_InterruptHandler,
				&InterruptController);

	Xil_ExceptionEnable();

	return XST_SUCCESS;
}




/**
 * @brief LED blinking task
 **/


void blinkTask()
{
	if(counter++>100000)
	{
		XGpio_DiscreteWrite(&outputLED, 2, XGpio_DiscreteRead(&outputLED, 2) ^ 0x2);
		counter = 0;
	}
}


XUartLite UartLite;
#define TEST_BUFFER_SIZE 16
//u8 SendBuffer[TEST_BUFFER_SIZE];	/* Buffer for Transmitting Data */
u8 RecvBuffer[TEST_BUFFER_SIZE];	/* Buffer for Receiving Data */

void uartInit(){
	int Status;

	Status = XUartLite_Initialize(&UartLite, XPAR_AXI_UARTLITE_0_DEVICE_ID);
	Status = XUartLite_SelfTest(&UartLite);
}


void uartTask(){
		ReceivedCount += XUartLite_Recv(&UartLite,
					   RecvBuffer + ReceivedCount,
					   TEST_BUFFER_SIZE - ReceivedCount);

}

// Pré-calculs : à générer hors ligne si possible
void init_twiddles(uint16_t N) {
    for (uint16_t k = 0; k < N/2; k++) {
        double angle = -2.0 * PI * k / N;
        twiddleReal[k] = (int16_t)(32767.0 * cos(angle));  // Q1.15
        twiddleImag[k] = (int16_t)(32767.0 * sin(angle));  // Q1.15
    }
}

void init_window(uint16_t N) {
    for (uint16_t i = 0; i < N; i++) {
        double w = 0.5 * (1 - cos(2.0 * PI * i / (N-1)));
        windowTable[i] = (int16_t)(32767.0 * w); // Q1.15
    }
}

// Génération d’un sinus fenêtré en Q1.15
void InitProcessedData() {
    const int16_t scale_num = 5;   // approx 5/128
    const int16_t scale_den = 128;

    for (uint16_t i = 0; i < MAX_FFT_SIZE; i++) {
        double angle = 2.0 * PI * ((double)scale_num * i) / (double)scale_den;
        int16_t sine = (int16_t)(32767.0 * sin(angle)); // Q1.15
        int32_t prod = (int32_t)sine * windowTable[i];  // Q1.15 * Q1.15
        SourceBuffer[i] = (int16_t)(prod >> 15);              // Q1.15
    }
}

// FFT Radix-2 sur Q1.15 : sortie énergie |X[k]|² pour k=0..N/2
void do_forward_FFT_energy(int16_t *src, uint32_t *dst, uint16_t N) {
    static int16_t real[MAX_FFT_SIZE];
    static int16_t imag[MAX_FFT_SIZE];

    // Copier source (imag = 0)
    for (uint16_t i = 0; i < N; i++) {
        real[i] = src[i];
        imag[i] = 0;
    }

    // Bit-reversal
    uint16_t j = 0;
    for (uint16_t i = 0; i < N; i++) {
        if (i < j) {
            int16_t tr = real[i], ti = imag[i];
            real[i] = real[j]; imag[i] = imag[j];
            real[j] = tr;      imag[j] = ti;
        }
        uint16_t m = N >> 1;
        while (j & m) { j &= ~m; m >>= 1; }
        j |= m;
    }

    // Étapes FFT
    for (uint16_t step = 1; step < N; step <<= 1) {
        uint16_t jump = step << 1;
        uint16_t twStep = MAX_FFT_SIZE / jump;

        for (uint16_t g = 0; g < step; g++) {
            int16_t wr = twiddleReal[g * twStep];
            int16_t wi = twiddleImag[g * twStep];

            for (uint16_t p = g; p < N; p += jump) {
                uint16_t q = p + step;

                int32_t tr = (int32_t)wr * real[q] - (int32_t)wi * imag[q];
                int32_t ti = (int32_t)wr * imag[q] + (int32_t)wi * real[q];
                tr >>= 15; ti >>= 15;

                int16_t ur = real[p];
                int16_t ui = imag[p];

                real[q] = ur - tr;
                imag[q] = ui - ti;
                real[p] = ur + tr;
                imag[p] = ui + ti;
            }
        }
    }

    // Calcul de |X[k]|² pour k=0..N/2 (évite sqrt)
    for (uint16_t k = 0; k <= N/2; k++) {
        int32_t r = real[k];
        int32_t i = imag[k];
        dst[k] = (uint32_t)((r*r + i*i) >> 15);  // normalisé
    }
}

/**
 * @brief Main entry point
 * @return Unused value
 **/
//const char* allo = "Hi type somtin\n\r";

bool udpSocketUp = false;

int_t main(void)
{

   XGpio_Initialize(&outputLED, XPAR_AXI_GPIO_0_DEVICE_ID);
   XGpio_SetDataDirection(&outputLED, 2, 0x0); //Fixer la direction du port 1 de l'AXI_GPIO_1 comme output

   uartInit();

   //Create user task
   print("\n\rHello World 4\n\r");


   print("\n merci1");
   int my_var=1;
   init_window(MAX_FFT_SIZE);
   print("\nwindow ok");
   init_twiddles(MAX_FFT_SIZE);
   print("\ntwiddles ok");
   InitProcessedData();
   print("\ndata ok");

   while(1){

	   blinkTask();
	   uartTask();
	   if(ReceivedCount){
		   print("\nbien recu mageuzx\n");
		   XUartLite_Send(&UartLite, RecvBuffer , ReceivedCount);
		   MYIP_S4E_4REG_mWriteReg(MY_IP_BASE_ADDRESS, MYIP_REG_0, counter);
		   ReceivedCount = 0;
	   }
	   if(my_var){
		   print("\nbien recu chef\n");
		   my_var=0;

		   print("\n\rNew FFT-IFFT cycle\n\r");
		   			   /* Writing into the FFT CONFIG Port */
		   do_forward_FFT_energy(SourceBuffer, FFTBuffer, MAX_FFT_SIZE);


		   			   // Signal d'entrée
		   			   print("\nInputSignal = [");
		   			   for (unsigned int i = 0; i < MAX_FFT_SIZE; i++) {
		   				   int16_t real = (int16_t)(SourceBuffer[i] & 0xFFFF);
		   				   xil_printf("%d", real);
		   				   if (i < MAX_FFT_SIZE - 1) xil_printf(", ");
		   			   }
		   			   print("]\n");

		   			   // Amplitude FFT (première moitié seulement)
		   			   print("\nFFTAmplitude = [");
		   			   for (unsigned int i = 0; i < MAX_FFT_SIZE / 2; i++) {
		   				   int16_t real = (int16_t)(FFTBuffer[i] & 0xFFFF);
		   				   int16_t imag = (int16_t)(FFTBuffer[i] >> 16);
		   				   float amp = sqrtf((float)real * real + (float)imag * imag);
		   				   int amp_milli = (int)(amp * 1000); // milli-unités
		   				   xil_printf("%d", amp_milli);
		   				   if (i < (MAX_FFT_SIZE / 2) - 1) xil_printf(", ");
		   			   }
		   			   print("]\n");
	   }

   }

   //This function should never return
   return 0;
}
/* main.c
 *
 *  Created on: 25 mars 2019
 *      Author: jbm
 */




